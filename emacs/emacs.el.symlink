;; install straight.el package manager
;; See: https://github.com/raxod502/straight.el
(defvar bootstrap-version)
(let ((bootstrap-file
       (expand-file-name "straight/repos/straight.el/bootstrap.el" user-emacs-directory))
      (bootstrap-version 5))
  (unless (file-exists-p bootstrap-file)
    (with-current-buffer
        (url-retrieve-synchronously
         "https://raw.githubusercontent.com/raxod502/straight.el/develop/install.el"
         'silent 'inhibit-cookies)
      (goto-char (point-max))
      (eval-print-last-sexp)))
  (load bootstrap-file nil 'nomessage))

;;
;; Global Settings and Keyboard Shortcuts
;;

;; Always enable line numbers
(global-display-line-numbers-mode 't)

;; kill the current buffer with a single key combo
(defun kill-this-buffer ()
  (interactive)
  (kill-buffer (buffer-name)))
(global-set-key (kbd "C-x C-k") 'kill-this-buffer)

;; toggle between moving to beginning of line and first non-whitespace
;; character
(defun smarter-move-beginning-of-line ()
"Move point to the first non-whitespace character on this line.
If point is already there, move to the beginning of the line.
Effectively toggle between the first non-whitespace character and
the beginning of the line."
  (interactive)
  (let ((orig-point (point)))
    (back-to-indentation)
    (when (= orig-point (point))
      (move-beginning-of-line 1))))
(global-set-key [remap move-beginning-of-line]
                'smarter-move-beginning-of-line)

;; copy region to clipboard when running in terminal
(defun copy-to-clipboard ()
  "Executes a shell command which takes the current region as stdin
  and copies it to the OS-clipboard outside of the emacs kill-ring we
  use `pbcopy`. On my system this is an alias for xlip on linux"
  (interactive)
  (shell-command-on-region (point) (mark) "pbcopy"))
(global-set-key (kbd "C-c C-r") 'copy-to-clipboard)

;;
;; Org-Mode
;;

(setq org-todo-keywords
      '((sequence "TODO" "WIP" "|" "DONE")))

(setq org-agenda-files
      (list "~/Documents/workspace/notes/"))

(global-set-key (kbd "C-c a") 'org-agenda)

;;
;; FlyCheck
;;

(straight-use-package 'flycheck)

;;
;; Sh/ Bash
;;

(add-hook 'sh-mode-hook 'flycheck-mode)

