{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"describe": {
		"scope": "javascriptreact, javascript",
		"prefix": "jtdescribe",
		"body": [
			"describe('$1', () => {",
			"$0",
			"});"
		]
	},
	"it": {
		"scope": "javascriptreact, javascript",
		"prefix": "jtit",
		"body": [
			"it('$1', () => {",
			"$0",
			"});"
		]
	},
	"snapshot": {
		"scope": "javascriptreact, javascript",
		"prefix": "jtsnapshot",
		"body": [
			"expect(${1:component}).toMatchSnapshot();$0"
		]
	},
	"mount": {
		"scope": "javascriptreact, javascript",
		"prefix": "jtmount",
		"body": [
			"const component = mount(",
			"$0",
			");"
		]
	},
	"shallow": {
		"scope": "javascriptreact, javascript",
		"prefix": "jtshallow",
		"body": [
			"const component = shallow(",
			"$0",
			");"
		]
	},
	"connect": {
		"scope": "javascriptreact, javascript",
		"prefix": "jtconnect",
		"body": [
			"const store = mockStore({",
			"\t$1",
			"});",
			"const component = shallow(",
			"\t <${2:Connected} store={store} />,",
			").dive();",
			"const { $3 } = component.props();",
			"$0"
		]
	},
	"header": {
		"scope": "javascriptreact, javascript",
		"prefix": "jtheader",
		"body": [
			"import React from 'react';",
			"import { ${1:shallow,} ${2:mount} } from 'enzyme';",
			"$0"
		]
	}
}